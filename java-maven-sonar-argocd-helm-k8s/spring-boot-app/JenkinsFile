pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        git branch: 'main', url: 'https://github.com/Manasa2835/Jenkins-Zero-To-Hero.git'      
      }
    }   
    
   stage('Build') {
            steps {
                script {
                    sh 'pwd'
                    sh 'ls -l'      
                    dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
                    sh 'mvn clean package'
                    sh 'ls -l target'
                   }
                    //sh 'pwd'
                    //sh 'ls -l'
                    //sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
                }
            }
        }
        stage('upload into jfrog artifactory'){
         steps{
          dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app/target'){
          rtServer (
            id: 'Artifactory-1',
            url: 'http://35.174.14.249:8081/artifactory',
                // If you're using Credentials ID:
                credentialsId: 'ccrreeddeennttiiaall',
                timeout: 300
        )

          rtUpload (
              serverId: 'Artifactory-1',
              spec: '''{
                    "files": [
                      {
                        "pattern": "spring-boot-demo-1.0.jar",
                        "target": "example-repo-local"
                      }
                   ]
              }''',
          )
          }
          }
          }
            }
          }
